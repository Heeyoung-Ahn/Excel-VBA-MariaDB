Option Explicit

Dim MName As String
Dim tskResultCD As Integer '작업결과를 반환할 변수: 0 진행안함, 1 진행완료

'----------------------------------
'  업데이트 체크
'    - 업데이트 진행 확인
'    - 업데이트 진행 결과 체크
'----------------------------------
Sub check_CL_update()
    
    MName = "church_list" '업데이트할 파일이름 설정 ★★

    If MsgBox(MName & " 자료를 공통기초자료 폴더에서 업데이트합니다." & Space(10) & Chr(13) & _
        "준비되었습니까?", vbQuestion + vbYesNo, banner) = vbNo Then
        MsgBox "그럼 다시 준비하고 업데이트를 진행해 주세요.", vbInformation, banner
        Exit Sub
    End If
    
    tskResultCD = 0
    ChurchListUpdate '작업 프로시저 ★★
    If tskResultCD = 1 Then
        MsgBox MName & " 자료 업데이트가 완료되었습니다." & Space(10), vbInformation, banner
    End If
    
End Sub

'--------------------------------------------------------
'  업데이트 진행
'    - 특정폴더에 업데이트 대상 파일 유무 확인
'    - 기존파일과 업데이트하려는 파일의 구조 비교
'    - 어드민 자료로 업데이트 후 기본 서식 적용
'--------------------------------------------------------
Sub ChurchListUpdate()

    Dim fileC As Workbook
    Dim rawP As String, rawF As String, rawS As String
    Dim tskF As String, tskS As String
    Dim DB As Range
    Dim cntR As Integer, cntC As Integer, i As Integer
    Dim rawFOpen As Boolean
    Dim oldFieldNM() As String, newFieldNM() As String

    '변수 정의
    rawS = "sheet1" '원본시트 이름 설정 ★★
    tskF = ThisWorkbook.Name '작업파일 이름 설정
    tskS = "RawData" '작업시트 이름 설정 ★★
    
    '공통기초자료 폴더에서 업데이트 대상 파일을 찾아서 rawF에 설정
    For i = 1 To 24
        rawP = Chr(66 + i) & ":\00 공통기초자료\" '업데이트 대상 자료의 폴더 설정 ★★
        rawF = Dir(rawP & "*전체교회목록*") '원본파일 이름 설정 ★★
        If Left(rawF, 1) = "~" Then
            MsgBox MName & " 파일을 다른 누군가가 열고 있습니다." & Space(10) & vbNewLine & _
                "확인 후 다시 진행해 주세요.", vbInformation, banner
            Exit Sub
        End If
        If rawF <> Empty Then GoTo n:
    Next
    MsgBox MName & " 파일이 업데이트하려는 폴더에 없습니다." & Space(10) & vbNewLine & _
        "확인 후 다시 진행해 주세요.", vbInformation, banner
    Exit Sub
n:
    
    '매크로 최적화
    Call Optimization
    
    '기존 작업파일 필드명 oldFieldNM 배열에 반환
    Sheets(tskS).Activate
    cntC = Range("A1").CurrentRegion.Columns.Count
    ReDim oldFieldNM(cntC - 1)
    For i = 0 To cntC - 1
        oldFieldNM(i) = Sheets(tskS).Range("A1").Offset(0, i).Value
    Next i

    '원본 파일 열기
    rawFOpen = False
    For Each fileC In Workbooks
        If fileC.Name = rawF Then
            rawFOpen = True
            Exit For
        End If
    Next
    If rawFOpen = True Then
        Windows(rawF).Activate
    Else
        Workbooks.Open Filename:=rawP & rawF ', Password:="12345" '비밀번호로 파일 열기★★
        Windows(rawF).Activate
    End If

    '원본파일의 1행에 병합된 필드 있을 경우 제거
    'Rows("1:1").Delete shift:=xlUp '1행에 병합된 필드명 삭제 필요시 진행★★
        
    '원본 파일 필드명 newFieldNM 배열에 반환
    Sheets(rawS).Activate
    ReDim newFieldNM(cntC - 1)
    For i = 0 To cntC - 1
        newFieldNM(i) = Sheets(rawS).Range("A1").Offset(0, i).Value
    Next i
       
    '파일 구조 점검: 필드명
    For i = 0 To cntC - 1
        If oldFieldNM(i) <> newFieldNM(i) Then
            MsgBox MName & " 어드민자료와 엑셀자료의 필드명이 서로 불일치합니다." & vbNewLine & _
                "확인 후 다시 진행해 주세요.", vbInformation, banner
            Windows(tskF).Activate
            GoTo m:
        End If
    Next i
            
    '기초자료 초기화
    Windows(tskF).Activate
    Sheets(tskS).[a1].CurrentRegion.ClearContents
        
    '어드민 자료 가져오기
    Windows(rawF).Activate
    Sheets(rawS).[a1].CurrentRegion.Copy
    Windows(tskF).Activate
    Sheets(tskS).Range("A1").PasteSpecial (3)
    Application.CutCopyMode = False
    
    '데이터영역설정
    Set DB = Sheets(tskS).Range("A1").CurrentRegion
    cntR = DB.Rows.Count
    cntC = DB.Columns.Count
    
    '찌꺼기 영역 삭제
    Sheets(tskS).Activate
    Cells(Rows.Count, 1).End(xlUp).Offset(1, 0).Resize(Rows.Count - cntR, Columns.Count).Delete shift:=xlUp
      
    '서식정리
    Range("2:2").Copy
    Range("2:2").Resize(Cells(Rows.Count, 1).End(xlUp).Row - 1).PasteSpecial Paste:=xlPasteFormats
    Application.CutCopyMode = False

    '열너비조정
    Sheets(tskS).UsedRange.EntireColumn.AutoFit
    tskResultCD = 1

m:
    '어드민 파일이 닫혀있었다면 다시 닫기
    If rawFOpen = False Then
        Windows(rawF).Activate
        Windows(rawF).Close SaveChanges:=False
    End If

    '마무리
    ActiveWorkbook.Save
    Call Normal
    
End Sub

'-----------------------------------
'  어드민 데이터 찌꺼기 제거
'    - 0값 제거하기
'    - Trim, Clean 진행
'-----------------------------------
Sub DataCleaning()

    Dim RngData As Range, Cell As Range
    Dim cntR As Integer, cntC As Integer, i As Integer, j As Integer
    Dim data() As Variant
    
    Call Optimization
    
    With Sheets("RawData")
        .Activate
        Set RngData = .[a1].CurrentRegion
        cntR = RngData.Rows.Count
        cntC = RngData.Columns.Count
        ReDim data(1 To cntR - 1, 1 To cntC)
        
        '0값 제거, Trim, Clean
        For i = 1 To cntR - 1
            For j = 1 To cntC
                Select Case Cells(2, 1).Offset(i - 1, j - 1)
                    Case 0: data(i, j) = ""
                    Case Else: data(i, j) = Application.WorksheetFunction.Clean(Trim(Cells(2, 1).Offset(i - 1, j - 1)))
                End Select
            Next j
        Next i
        Cells(1, 1).CurrentRegion.Offset(1).ClearContents
        Cells(2, 1).Resize(cntR - 1, cntC) = data
    End With

    Call Normal
    
End Sub
